name: 'Update GKE Deployment'
description: 'Updates an application running in GKE. This workflow should be used for CI-CD workflows to update deployments that have been created with the Labs Cloud Helm Charts.'

inputs:
  gcloud-service-auth:
    required: true
    description: 'Credentials file for gcloud set up'
  project-id:
    required: true
    description: 'Google Cloud project ID'
  deployment-name:
    required: true
    description: 'Name of the k8s deployment to update'
  deployment-environment:
    required: true
    description: 'Deployment environment (ex: test, beta, prod, ...)'
  cluster-name:
    required: true
    description: 'Kubernetes cluster where the deployments live'
  deployment-location:
    required: false
    description: 'The region or zone where your deployment is'
    default: 'us-central1'
  deployment-namespace:
    required: false
    description: 'Deployment Kubernetes Namespace'
    default: 'default'
  deployment-rollout-timeout:
    required: false
    description: 'Time to wait for a deployment to finish before marking it as a failure (ex: 10m)'
    default: '10m'

runs:
  using: "composite"
  steps:
    - uses: google-github-actions/auth@v0
      name: Login to Google Cloud
      with:
        credentials_json: ${{ inputs.gcloud-service-auth }}
    - name: Fetch k8s cluster credentials
      id: get-credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ inputs.cluster-name }}
        location: ${{ inputs.deployment-location }}
    - name: Start the latest container
      shell: bash
      run: |-
        kubectl set image deployment "${{ inputs.deployment-name }}-${{ inputs.deployment-environment }}" "${{ inputs.deployment-name }}"="gcr.io/${{ inputs.project-id }}/${{ inputs.deployment-name }}:${{ github.sha }}" --all --namespace="${{ inputs.deployment-namespace }}"
    - name: Checking deployment success status
      shell: bash
      run: |-
        if kubectl rollout status deployment "${{ inputs.deployment-name }}-${{ inputs.deployment-environment }}" --timeout="${{ inputs.deployment-rollout-timeout }}" --namespace="${{ inputs.deployment-namespace }}"; then
          echo "rollout status successful"
        else
          kubectl describe deploy "${{ inputs.deployment-name }}-${{ inputs.deployment-environment }}"
          echo "Failure to deploy ${{ inputs.deployment-name }}-${{ inputs.deployment-environment }}"
        fi
