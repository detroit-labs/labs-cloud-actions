name: 'Builds and pushes a Spring Boot application Docker container'
description: 'Builds a Spring Boot application Docker container and pushes it to Google Container Registry. This workflow should be used for CI-CD workflows to update deployments that have been created with the Labs Cloud Helm Charts.'

inputs:
  gcloud-service-auth:
    required: false
    description: 'Credentials file for gcloud set up'
  project-id:
    required: true
    description: 'Google Cloud Project ID'
  deployment-name:
    required: true
    description: 'Name of the Google Cloud Project deployment'
  java-version:
    required: false
    description: 'Version of Java to use'
    default: '17'
  gradle-module-name:
    required: false
    description: 'The name of the Gradle module to build in a multi module project'
    default: ''

outputs:
  image-name:
    description: "The fully qualified image name pushed to the repository"
    value: ${{ steps.generate-image-name.outputs.IMAGE_NAME }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v4
      name: Install Java
      with:
        distribution: temurin
        java-version: ${{ inputs.java-version }}
    - run: echo "IMAGE_NAME=us-central1-docker.pkg.dev/${{ inputs.project-id }}/${{ inputs.deployment-name }}" >> $GITHUB_OUTPUT
      shell: bash
      name: Generate the name of the docker image
      id: generate-image-name
    - name: Set Up Gradle
      uses: gradle/actions/setup-gradle@v4
    - name: Build Docker Container
      shell: bash
      run: |
        ./gradlew \
          ${{ inputs.gradle-module-name }}:clean \
          ${{ inputs.gradle-module-name }}:bootBuildImage \
          --imageName=${{steps.generate-image-name.outputs.IMAGE_NAME}}:${{ github.sha }}
    - uses: google-github-actions/auth@v2
      name: Login to Google Cloud
      with:
        credentials_json: ${{ inputs.gcloud-service-auth }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        install_components: 'gke-gcloud-auth-plugin'
    - name: Authorize Docker push
      shell: bash
      run: gcloud auth configure-docker us-central1-docker.pkg.dev
    - name: Build and Push Container
      shell: bash
      run: |-
        docker push ${{steps.generate-image-name.outputs.IMAGE_NAME}}:${{ github.sha }}
        docker tag ${{ steps.generate-image-name.outputs.IMAGE_NAME }}:${{ github.sha }} ${{ steps.generate-image-name.outputs.IMAGE_NAME }}:latest
        docker push ${{steps.generate-image-name.outputs.IMAGE_NAME}}:latest