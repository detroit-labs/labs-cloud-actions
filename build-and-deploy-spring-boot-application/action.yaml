name: 'Build and deploy a Spring Boot application'
description: 'Builds and deploys a Spring Boot application to GKE. This workflow should be used for CI-CD workflows to update deployments that have been created with the Labs Cloud Helm Charts.'

inputs:
  gcloud-service-auth:
    required: false
    description: 'Credentials file for gcloud set up'
  project-id:
    required: true
    description: 'Google Cloud Project ID'
  deployment-name:
    required: true
    description: 'My Labs Cloud Name'
  deployment-environment:
    required: true
    description: 'Deployment Environment (ex: test, beta, prod, ...)'
  deployment-namespace:
    required: false
    description: 'Deployment Kubernetes Namespace'
    default: 'default'
  java-version:
    required: false
    description: 'Version of Java to use'
    default: 17
  update-deployment:
    required: false
    description: 'Boolean indicating if the deployment should be updated along with the image push'
    default: 'true'
  artifactory-username:
    required: true
    description: 'The user name to access Labs Cloud artifacts from Artifactory'
  artifactory-password:
    required: true
    description: 'The password to access Labs Cloud artifacts from Artifactory'

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v3
      name: Install Java
      with:
        distribution: temurin
        java-version: ${{ inputs.java-version }}
        cache: 'gradle'
    - uses: gradle/gradle-build-action@v2
      name: Install Gradle Wrapper
    - run: echo '::set-output name=IMAGE_NAME::gcr.io/${{ inputs.project-id }}/${{ inputs.deployment-name }}:${{ github.sha }}'
      name: Generate the name of the docker image
      id: generate-image-name
    - run: ./gradlew clean gnagCheck bootBuildImage -Partifactory_user=${{ inputs.artifactory-username }} -Partifactory_password=${{ ${{ inputs.artifactory-password }} --imageName=steps.generate-image-name.IMAGE_NAME
      name: Run Gnag and build Docker Container
      env:
        ARTIFACTORY_USER: ${{ inputs.artifactory-username }}
        ARTIFACTORY_PASSWORD: ${{ inputs.artifactory-password }}
    - uses: 'google-github-actions/auth@v0'
      name: Login to Google Cloud
      with:
        credentials_json: ${{ inputs.gcloud-service-auth }}
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v0'
    - name: Authorize Docker push
      run: gcloud auth configure-docker
    - name: Build and Push Container
      run: |-
        docker push gcr.io/${{ inputs.project-id }}/${{ inputs.deployment-name }}:${{ github.sha }}
        docker push gcr.io/${{ inputs.project-id }}/${{ inputs.deployment-name }}:latest
    - name: Start the latest container
      run: |-
        kubectl set image deployment "${inputs.deployment-name}-${inputs.deployment-environment}" "${inputs.deployment-name}"="${{ github.sha }}" --all --record=true --namespace="${{ inputs.deployment-namespace }}"
      if: ${{ inputs.update-deployment == 'true' }}
    - name: Checking deployment success status
      run: |-
        kubectl rollout status deployment "${inputs.deployment-name}-${inputs.deployment-environment}" --timeout=5m
      if: ${{ inputs.update-deployment == 'true' }}